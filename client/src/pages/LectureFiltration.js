import React, { useContext, useState, useTransition } from 'react'
import {Button, Card, Container, Form, Row, Image} from 'react-bootstrap';
import { NavLink,useLocation, useNavigate } from 'react-router-dom';
import { CALCULATOR_ROUTE, DUBLICATE_ROUTE, FILTRATION_ROUTE, GROUPING_ROUTE, LOGIN_ROUTE, MAINSVED_ROUTE, REGISTRATION_ROUTE, START_ROUTE, UNION_ROUTE } from '../utils/consts';
import { login, registration } from '../http/userAPI';
import { Context } from '..';
import {observer} from 'mobx-react-lite'

const LectureFiltration = observer(() => {
  const history =useNavigate()

  return (
    <Container className="d-flex justify-content-center align-items-center"
    >
      <div>
      <h1> 
      <Image className= 'me-2' width={45} src="../filter-data_default.svg"/>
        Фильтрация</h1>
      <p>Компонент Фильтр строк позволяет выделить записи, которые удовлетворяют одному или нескольким условиям. Несколько условий объединяются в сложное условие с помощью логических операторов И/ИЛИ.</p>
      <p>Пример сложного условия:</p>
      <p>(Город = Москва) И (Имя = Саша) И (Возраст {'>'}= 30) И (Пол = мужской) ИЛИ (Город = Тула)</p>
      <p>В качестве параметра условий могут выступать управляющие переменные. В этом случае приведенный выше пример будет выглядеть следующим образом:</p>
      <p>(Город = {'<VAR1>'}) И (Имя = {'<VAR2>'}) И (Возраст{' >'}= {'<VAR3>'}) И (Пол = {'<VAR4>'}) ИЛИ (Город = {'<VAR5>'})</p>
      <p>Где: VAR1 ... VAR5 — имена управляющих переменных, принятые узлом в качестве входных параметров.</p>
      <p>Таким образом, условие фильтра может задаваться динамически в ходе выполнения сценария.</p>
      <p>Входной набор данных делится на два выходных набора (таблицы данных): записи, удовлетворяющие условию фильтрации, и записи, не удовлетворяющие условию.</p>
      <h4>Вход</h4>
      <ul>
        <li>
        <Image className= 'me-2' src="../table_inactive.svg"/>
          Входной источник данных (таблица данных).</li>
      </ul>
      <h4>Выход</h4>
      <ul>
        <li>
        <Image className= 'me-2' src="../table_inactive.svg"/>
          Соответствуют условию (таблица данных);</li>
        <li>
        <Image className= 'me-2' src="../table_inactive.svg"/>
          Не соответствуют условию (таблица данных).</li>
      </ul>
      <h3>Мастер настройки</h3>
      <p>В верхней части мастера настройки находится Состояния входа.</p>
      <p>Под строкой состояния располагается область настройки условий фильтрации. Новое условие добавляется нажатием на кнопку +. Далее выбирается имя поля, отношение сравнения (Условие) и значение сравнения.</p>
      <p>В зависимости от отношения сравнения, вида и типа данных поля, по которому задается условие фильтрации, значение сравнения можно задать с помощью переключателя или выбрать из предлагаемого списка. Также можно ввести данные с клавиатуры.</p>
      <p>Для условий в списке/вне списка элементы для сравнения добавляются по клавише Enter, удаляются — по клавишам Backspace или Delete. Перемещаться по введенным элементам списка можно при помощи стрелок. .</p>
      <p>Для условий пустой/не пустой значение для сравнения не задается.</p>
      <p>При создании нескольких условий между ними необходимо задать логические операторы И/ИЛИ. По умолчанию ставится оператор И. Чтобы изменить оператор, нужно кликнуть по нему левой кнопкой мыши.</p>
      <p>В узле имеется возможность предпросмотра результата фильтрации (выводятся первые 25 строк результирующей таблицы). Чтобы запустить его, необходимо нажать кнопку Применить фильтр.</p>
      <Container className='d-flex justify-content-end'>
        <Button 
        variant='success'
        className='mb-3 rounded-5'
        onClick={() => history(UNION_ROUTE)}
        > К следующей лекции</Button>
   </Container>
      </div>

      
    </Container>
  );
});

export default LectureFiltration;
